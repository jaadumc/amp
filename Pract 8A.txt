		Practical 8A

	Main Activity.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:gravity="center"
    android:padding="16dp"
    android:orientation="vertical"
    tools:context=".MainActivity">

   <Button
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       android:id="@+id/btn_start_service"
       android:text="Start Music"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="20dp"
        android:id="@+id/btn_stop_service"
        android:text="Stop Music"/>
</LinearLayout>

	Music Service.kt
package com.example.pract8

import android.content.Intent
import android.media.MediaPlayer
import android.os.IBinder
import android.provider.Settings
import android.app.Service


class MusicService: Service(){
    private lateinit var player: MediaPlayer
    override fun onStartCommand(intent: Intent,flags:Int,StartId:Int):Int{
        player=MediaPlayer.create(this,Settings.System.DEFAULT_RINGTONE_URI)
        player.setLooping(true)
        player.start()
        return START_STICKY
    }
    override fun onDestroy(){
        super.onDestroy()
        player.stop()
    }
    override fun onBind(intent: Intent):IBinder?{
        return null
    }
}

	Android Manifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.Pract8"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <service android:name=".MusicService" android:enabled="true"/>
    </application>

</manifest>

	Main Activity.Kt
package com.example.pract8

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        val btn_start = findViewById<Button>(R.id.btn_start_service)
        val btn_stop= findViewById<Button>(R.id.btn_stop_service)

        btn_start.setOnClickListener{
            startService(Intent(this,MusicService::class.java))
        }
        btn_stop.setOnClickListener{
            stopService(Intent(this,MusicService::class.java))
        }
    }
}

Outputs:
 

Pract 8th B:
Main Manifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-permission android:name="android.permission.ACCESS_NOTIFICATION_POLICY"/>
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.Prac8b"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>

Main Activity.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/btn_non_clickable"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="non clickable notification"
        android:layout_marginBottom="16dp"/>
    <Button
        android:id="@+id/btn_clickable"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Clickable notification"
        android:layout_below="@+id/btn_non_clickable"/>

</RelativeLayout>

Main Activity.kt

package com.example.prac8b

import android.app.NotificationChannel
import android.app.NotificationManager
import android.app.PendingIntent
import android.content.Context
import android.content.Intent
import android.graphics.Color
import android.os.Build
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import androidx.core.app.NotificationCompat

class MainActivity : AppCompatActivity() {
    private lateinit var nonClickableNotificationManager: NotificationManager
    private lateinit var clickableNotificationManager: NotificationManager
    private var CHANNEL_ID="my_channel_01"
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        val btnnonclick = findViewById<Button>(R.id.btn_non_clickable)
        val btnclick = findViewById<Button>(R.id.btn_clickable)
        nonClickableNotificationManager=getSystemService(Context.NOTIFICATION_SERVICE)as NotificationManager
        clickableNotificationManager=getSystemService(Context.NOTIFICATION_SERVICE)as NotificationManager
        if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.O){
            val channel=NotificationChannel(CHANNEL_ID,"My Channel",NotificationManager.IMPORTANCE_HIGH)
            channel.description="My channel Description"
            channel.lightColor=Color.RED
            nonClickableNotificationManager.createNotificationChannel(channel)
            clickableNotificationManager.createNotificationChannel(channel)
        }
        btnnonclick.setOnClickListener {
            val notification=createNonClickableNotification()
            nonClickableNotificationManager.notify(0,notification.build())
        }
        btnclick.setOnClickListener {
            val notification=createClickableNotification()
            clickableNotificationManager.notify(1,notification.build())
        }
    }
    private fun createNonClickableNotification():NotificationCompat.Builder{
        return NotificationCompat.Builder(this,CHANNEL_ID)
            .setSmallIcon(R.drawable.ic_launcher_foreground)
            .setContentTitle("Non Clickable Notification")
            .setContentText("This is non-clickable notification")
            .setAutoCancel(true)
    }
    private fun createClickableNotification():NotificationCompat.Builder{
        val intent= Intent(this,MainActivity::class.java)
        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_SINGLE_TOP)
        val pendingIntent=PendingIntent.getActivity(this,1,intent,PendingIntent.FLAG_IMMUTABLE
                or PendingIntent.FLAG_UPDATE_CURRENT)
        return NotificationCompat.Builder(this,CHANNEL_ID)
            .setSmallIcon(R.drawable.ic_launcher_foreground)
            .setContentTitle("Clickable Notification")
            .setContentText("This is clickable notification")
            .setAutoCancel(true)
            .setContentIntent(pendingIntent)
    }
}



Outputs:
  
If on button click, no notifications are generated then, App Info > Notification > turn it On
  
Pract 8th C:

Main Activity.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>

Manifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.Prac8c"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <receiver android:name=".Myreceiver" android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.AIRPLANE_MODE"></action>
            </intent-filter>
        </receiver>
    </application>

</manifest>

Receiver.kt

package com.example.prac8c

import android.content.BroadcastReceiver
import android.content.Context
import android.content.Intent
import android.widget.Toast

class Myreceiver:BroadcastReceiver() {
    override fun onReceive(context: Context?, intent: Intent?) {
        Toast.makeText(context,"Broadcast is called",Toast.LENGTH_LONG).show()
    }
}

Main Activity.kt

package com.example.prac8c

import android.content.Intent
import android.content.IntentFilter
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle

class MainActivity : AppCompatActivity() {
    var myReceiver=Myreceiver()
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        register()
    }
    private fun register(){
        var filter=IntentFilter()
        filter.addAction(Intent.ACTION_AIRPLANE_MODE_CHANGED)
        registerReceiver(myReceiver,filter)
    }

    override fun onDestroy() {
        super.onDestroy()
        unregisterReceiver(myReceiver)
    }
}

Outputs: